/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  Restore, // @ts-ignore
  Backup, // @ts-ignore
  User,
} from "@prisma/client";

export class RestoreServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.RestoreCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.RestoreCountArgs>
  ): Promise<number> {
    return this.prisma.restore.count(args);
  }

  async restores<T extends Prisma.RestoreFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.RestoreFindManyArgs>
  ): Promise<Restore[]> {
    return this.prisma.restore.findMany(args);
  }
  async restore<T extends Prisma.RestoreFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.RestoreFindUniqueArgs>
  ): Promise<Restore | null> {
    return this.prisma.restore.findUnique(args);
  }
  async createRestore<T extends Prisma.RestoreCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.RestoreCreateArgs>
  ): Promise<Restore> {
    return this.prisma.restore.create<T>(args);
  }
  async updateRestore<T extends Prisma.RestoreUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.RestoreUpdateArgs>
  ): Promise<Restore> {
    return this.prisma.restore.update<T>(args);
  }
  async deleteRestore<T extends Prisma.RestoreDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.RestoreDeleteArgs>
  ): Promise<Restore> {
    return this.prisma.restore.delete(args);
  }

  async getBackup(parentId: string): Promise<Backup | null> {
    return this.prisma.restore
      .findUnique({
        where: { id: parentId },
      })
      .backup();
  }

  async getCreatedBy(parentId: string): Promise<User | null> {
    return this.prisma.restore
      .findUnique({
        where: { id: parentId },
      })
      .createdBy();
  }
}
